{"mappings":"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","sources":["<anon>","src/js/index.js","src/js/chmps.js"],"sourcesContent":["// index.js\n// api.js\nasync function $ad16949f8b239ff7$export$e52ce3d22db78d7c() {\n    try {\n        const response = await fetch('https://ddragon.leagueoflegends.com/cdn/13.18.1/data/es_ES/champion.json');\n        const data = await response.json();\n        return data.data; // Devuelve solo los datos de los campeones\n    } catch (error) {\n        console.error('Error al cargar los campeones:', error);\n        throw error; // Lanza el error para que pueda ser manejado en index.js\n    }\n}\n\n\ndocument.getElementById('button').addEventListener('click', async function() {\n    // Limpiar cualquier contenido anterior (si es necesario)\n    const gridContainer = document.getElementById('champion-grid');\n    gridContainer.innerHTML = ''; // Limpiar las tarjetas previas\n    // Obtener los datos de los campeones desde la API usando la función importada\n    try {\n        const champions = await (0, $ad16949f8b239ff7$export$e52ce3d22db78d7c)();\n        // Iteramos sobre los campeones y generamos las tarjetas\n        Object.values(champions).forEach((champion)=>{\n            // Crear el contenedor de la tarjeta\n            const card = document.createElement('div');\n            card.classList.add('champion-card');\n            // Crear el contenido de la tarjeta (cara delantera)\n            const cardInner = document.createElement('div');\n            cardInner.classList.add('champion-card-inner');\n            // Cara frontal con la imagen, nombre y descripción\n            const cardFront = document.createElement('div');\n            cardFront.classList.add('champion-card-front');\n            const championImg = document.createElement('img');\n            championImg.src = `https://ddragon.leagueoflegends.com/cdn/13.18.1/img/champion/${champion.id}.png`;\n            championImg.alt = champion.name;\n            // Crear el nombre y la descripción del campeón\n            const championInfo = document.createElement('div');\n            championInfo.classList.add('champion-info');\n            const championName = document.createElement('h3');\n            championName.textContent = champion.name;\n            const championDesc = document.createElement('p');\n            championDesc.textContent = champion.title; // Descripción del campeón\n            championInfo.appendChild(championName);\n            championInfo.appendChild(championDesc);\n            cardFront.appendChild(championImg);\n            cardFront.appendChild(championInfo);\n            cardInner.appendChild(cardFront);\n            // Cara trasera con estadísticas (Ataque, Defensa, Magia, Dificultad)\n            const cardBack = document.createElement('div');\n            cardBack.classList.add('champion-card-back');\n            const statsTitle = document.createElement('h3');\n            statsTitle.textContent = champion.name;\n            cardBack.appendChild(statsTitle);\n            // Agregar las estadísticas de cada campeón (ataque, defensa, magia, dificultad)\n            const statsList = document.createElement('ul');\n            const attackItem = document.createElement('li');\n            attackItem.textContent = `Ataque: ${champion.info.attack}`;\n            const defenseItem = document.createElement('li');\n            defenseItem.textContent = `Defensa: ${champion.info.defense}`;\n            const magicItem = document.createElement('li');\n            magicItem.textContent = `Magia: ${champion.info.magic}`;\n            const difficultyItem = document.createElement('li');\n            difficultyItem.textContent = `Dificultad: ${champion.info.difficulty}`;\n            const tagsItem = document.createElement('li');\n            tagsItem.textContent = `Roles: ${champion.tags}`;\n            statsList.appendChild(attackItem);\n            statsList.appendChild(defenseItem);\n            statsList.appendChild(magicItem);\n            statsList.appendChild(difficultyItem);\n            statsList.appendChild(tagsItem);\n            cardBack.appendChild(statsList);\n            cardInner.appendChild(cardBack);\n            // Agregar la tarjeta a la cuadrícula\n            card.appendChild(cardInner);\n            gridContainer.appendChild(card);\n        });\n    } catch (error) {\n        console.error('Error al cargar los campeones:', error);\n        const errorMessage = document.createElement('div');\n        errorMessage.textContent = \"\\xa1Error al cargar los campeones!\";\n        errorMessage.classList.add('error');\n        document.body.appendChild(errorMessage);\n    }\n});\n\n\n//# sourceMappingURL=index.54eb1b74.js.map\n","// index.js\r\nimport { getChampionsData } from './chmps.js'; // Importa la función desde api.js\r\n\r\ndocument.getElementById('button').addEventListener('click', async function() {\r\n  // Limpiar cualquier contenido anterior (si es necesario)\r\n  const gridContainer = document.getElementById('champion-grid');\r\n  gridContainer.innerHTML = ''; // Limpiar las tarjetas previas\r\n\r\n  // Obtener los datos de los campeones desde la API usando la función importada\r\n  try {\r\n    const champions = await getChampionsData();\r\n\r\n    // Iteramos sobre los campeones y generamos las tarjetas\r\n    Object.values(champions).forEach(champion => {\r\n      // Crear el contenedor de la tarjeta\r\n      const card = document.createElement('div');\r\n      card.classList.add('champion-card');\r\n\r\n      // Crear el contenido de la tarjeta (cara delantera)\r\n      const cardInner = document.createElement('div');\r\n      cardInner.classList.add('champion-card-inner');\r\n      \r\n      // Cara frontal con la imagen, nombre y descripción\r\n      const cardFront = document.createElement('div');\r\n      cardFront.classList.add('champion-card-front');\r\n      const championImg = document.createElement('img');\r\n      championImg.src = `https://ddragon.leagueoflegends.com/cdn/13.18.1/img/champion/${champion.id}.png`;\r\n      championImg.alt = champion.name;\r\n      \r\n      // Crear el nombre y la descripción del campeón\r\n      const championInfo = document.createElement('div');\r\n      championInfo.classList.add('champion-info');\r\n      const championName = document.createElement('h3');\r\n      championName.textContent = champion.name;\r\n      const championDesc = document.createElement('p');\r\n      championDesc.textContent = champion.title;  // Descripción del campeón\r\n      championInfo.appendChild(championName);\r\n      championInfo.appendChild(championDesc);\r\n\r\n      cardFront.appendChild(championImg);\r\n      cardFront.appendChild(championInfo);\r\n      cardInner.appendChild(cardFront);\r\n\r\n      // Cara trasera con estadísticas (Ataque, Defensa, Magia, Dificultad)\r\n      const cardBack = document.createElement('div');\r\n      cardBack.classList.add('champion-card-back');\r\n      const statsTitle = document.createElement('h3');\r\n      statsTitle.textContent = champion.name;\r\n      cardBack.appendChild(statsTitle);\r\n\r\n      // Agregar las estadísticas de cada campeón (ataque, defensa, magia, dificultad)\r\n      const statsList = document.createElement('ul');\r\n      const attackItem = document.createElement('li');\r\n      attackItem.textContent = `Ataque: ${champion.info.attack}`;\r\n      const defenseItem = document.createElement('li');\r\n      defenseItem.textContent = `Defensa: ${champion.info.defense}`;\r\n      const magicItem = document.createElement('li');\r\n      magicItem.textContent = `Magia: ${champion.info.magic}`;\r\n      const difficultyItem = document.createElement('li');\r\n      difficultyItem.textContent = `Dificultad: ${champion.info.difficulty}`;\r\n      const tagsItem = document.createElement('li');\r\n      tagsItem.textContent= `Roles: ${champion.tags}`;\r\n\r\n      statsList.appendChild(attackItem);\r\n      statsList.appendChild(defenseItem);\r\n      statsList.appendChild(magicItem);\r\n      statsList.appendChild(difficultyItem);\r\n      statsList.appendChild(tagsItem);\r\n      cardBack.appendChild(statsList);\r\n\r\n      cardInner.appendChild(cardBack);\r\n\r\n      // Agregar la tarjeta a la cuadrícula\r\n      card.appendChild(cardInner);\r\n      gridContainer.appendChild(card);\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error al cargar los campeones:', error);\r\n    const errorMessage = document.createElement('div');\r\n    errorMessage.textContent = '¡Error al cargar los campeones!';\r\n    errorMessage.classList.add('error');\r\n    document.body.appendChild(errorMessage);\r\n  }\r\n});\r\n","// api.js\r\nexport async function getChampionsData() {\r\n  try {\r\n    const response = await fetch('https://ddragon.leagueoflegends.com/cdn/13.18.1/data/es_ES/champion.json');\r\n    const data = await response.json();\r\n    return data.data;  // Devuelve solo los datos de los campeones\r\n  } catch (error) {\r\n    console.error('Error al cargar los campeones:', error);\r\n    throw error;  // Lanza el error para que pueda ser manejado en index.js\r\n  }\r\n}\r\n"],"names":["$ad16949f8b239ff7$export$e52ce3d22db78d7c","response","fetch","data","json","error","console","document","getElementById","addEventListener","gridContainer","innerHTML","champions","Object","values","forEach","champion","card","createElement","classList","add","cardInner","cardFront","championImg","src","id","alt","name","championInfo","championName","textContent","championDesc","title","appendChild","cardBack","statsTitle","statsList","attackItem","info","attack","defenseItem","defense","magicItem","magic","difficultyItem","difficulty","tagsItem","tags","errorMessage","body"],"version":3,"file":"index.54eb1b74.js.map"}